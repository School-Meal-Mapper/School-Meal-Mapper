{"remainingRequest":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/src/components/ResourceMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/src/components/ResourceMap.vue","mtime":1589995949811},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IExNYXAsIExUaWxlTGF5ZXIsIExNYXJrZXIsIExDb250cm9sIH0gZnJvbSAndnVlMi1sZWFmbGV0JwppbXBvcnQgeyBsYXRMbmcsIEljb24sIEV4dHJhTWFya2VycyB9IGZyb20gJ2xlYWZsZXQnCmltcG9ydCBWdWUyTGVhZmxldE1hcmtlckNsdXN0ZXIgZnJvbSAndnVlMi1sZWFmbGV0LW1hcmtlcmNsdXN0ZXInCmltcG9ydCBJY29uTGlzdEl0ZW0gZnJvbSAnLi9JY29uTGlzdEl0ZW0udnVlJwppbXBvcnQgeyBidXNpbmVzc0ljb24gfSBmcm9tICcuLi91dGlsaXRpZXMnCgpkZWxldGUgSWNvbi5EZWZhdWx0LnByb3RvdHlwZS5fZ2V0SWNvblVybApJY29uLkRlZmF1bHQubWVyZ2VPcHRpb25zKHsKICBpY29uUmV0aW5hVXJsOiByZXF1aXJlKCdsZWFmbGV0L2Rpc3QvaW1hZ2VzL21hcmtlci1pY29uLTJ4LnBuZycpLAogIGljb25Vcmw6IHJlcXVpcmUoJ2xlYWZsZXQvZGlzdC9pbWFnZXMvbWFya2VyLWljb24ucG5nJyksCiAgc2hhZG93VXJsOiByZXF1aXJlKCdsZWFmbGV0L2Rpc3QvaW1hZ2VzL21hcmtlci1zaGFkb3cucG5nJykKfSkKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVzb3VyY2VNYXAnLAogIGNvbXBvbmVudHM6IHsKICAgIExNYXAsCiAgICBMVGlsZUxheWVyLAogICAgTE1hcmtlciwKICAgIExDb250cm9sLAogICAgJ3YtbWFya2VyLWNsdXN0ZXInOiBWdWUyTGVhZmxldE1hcmtlckNsdXN0ZXIsCiAgICBJY29uTGlzdEl0ZW0KICB9LAogIHByb3BzOiB7CiAgICBmaWx0ZXJlZE1hcmtlcnM6IEFycmF5LAogICAgbG9jYXRpb246IHsgbG9jVmFsdWU6IE51bWJlciwgY3VycmVudEJ1c2luZXNzOiBPYmplY3QsIGlzU2V0QnlNYXA6IEJvb2xlYW4gfSwKICAgIG1hcFVybDogU3RyaW5nLAogICAgYXR0cmlidXRpb246IFN0cmluZywKICAgIGNlbnRyb2lkOiB7IGxhdDogTnVtYmVyLCBsbmc6IE51bWJlciB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2VudGVyOiBsYXRMbmcodGhpcy5jZW50cm9pZC5sYXQsIHRoaXMuY2VudHJvaWQubG5nKSwKICAgICAgem9vbTogMTAsCiAgICAgIHNob3dQYXJhZ3JhcGg6IHRydWUsCiAgICAgIG1hcE9wdGlvbnM6IHsgem9vbVNuYXA6IDAuNSwgc2V0VmlldzogdHJ1ZSB9LAogICAgICBzaG93TWFwOiB0cnVlLAogICAgICBsb2NhdGlvbkRhdGE6IGxvY2F0aW9uLAogICAgICBjbHVzdGVyT3B0aW9uczogeyBzcGlkZXJmeU9uTWF4Wm9vbTogdHJ1ZSwgbWF4Q2x1c3RlclJhZGl1czogNDAsIGRpc2FibGVDbHVzdGVyaW5nQXRab29tOiAxNiB9LAogICAgICBzaG93S2V5OiBmYWxzZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZWRpdFpvb21Db250cm9sKCkKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgdGhpcy4kZW1pdCgnYm91bmRzJywgdGhpcy4kcmVmcy5jb3ZpZE1hcC5tYXBPYmplY3QuZ2V0Qm91bmRzKCkpCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgY2VudGVyVXBkYXRlZChjZW50ZXIpIHsKICAgICAgdGhpcy5jZW50ZXIgPSBjZW50ZXIKICAgICAgdGhpcy4kZW1pdCgnY2VudGVyJywgY2VudGVyKQogICAgfSwKICAgIGJvdW5kc1VwZGF0ZWQoYm91bmRzKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2JvdW5kcycsIGJvdW5kcykKICAgIH0sCiAgICBlZGl0Wm9vbUNvbnRyb2woKSB7CiAgICAgIGNvbnN0IHpvb21Db250cm9sID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignLmxlYWZsZXQtdG9wLmxlYWZsZXQtbGVmdCcpCiAgICAgIHpvb21Db250cm9sLmNsYXNzTmFtZSA9ICdsZWFmbGV0LWJvdHRvbSBsZWFmbGV0LXJpZ2h0JwogICAgfSwKICAgIGxhdExuZywKICAgIHNlbGVjdGVkSWNvbihzZWxlY3RlZCwgaXRlbSkgewogICAgICBjb25zdCBpc09wZW4gPSBpdGVtLm9jCiAgICAgIGxldCBtYXJrZXJDb2xvciA9IGlzT3BlbiA/ICcjNTY2Y2E5JyA6ICcjOTk5JwogICAgICBjb25zdCBpY29uQ2xhc3NlcyA9IGJ1c2luZXNzSWNvbihpdGVtLm1hcmtlcikKICAgICAgaWYgKHNlbGVjdGVkKSB7CiAgICAgICAgbWFya2VyQ29sb3IgPSAnI2ZmM2QzZCcKICAgICAgfQogICAgICB2YXIgbWFya2VySWNvbiA9IEV4dHJhTWFya2Vycy5pY29uKHsKICAgICAgICBtYXJrZXJDb2xvciwKICAgICAgICBpY29uOiBpY29uQ2xhc3NlcywKICAgICAgICBwcmVmaXg6ICdmYScsCiAgICAgICAgc3ZnOiB0cnVlCiAgICAgICAgLy8gLAogICAgICAgIC8vIG5hbWU6IGl0ZW0ubWFya2VyLmdzeCRwcm92aWRlcm5hbWUuJHQsCiAgICAgICAgLy8gbmFtZUNsYXNzZXM6ICdtYXJrZXJOYW1lJwogICAgICB9KQogICAgICByZXR1cm4gbWFya2VySWNvbgogICAgfQogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgIC8vIGNsaWNrOiAoZSkgPT4gY29uc29sZS5sb2coJ2NsdXN0ZXJjbGljaycsIGUpLAogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgIC8vIHJlYWR5OiAoZSkgPT4gY29uc29sZS5sb2coJ3JlYWR5JywgZSkKICB9LAogIHdhdGNoOiB7CiAgICAvLyBodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZwogICAgbG9jYXRpb246IGZ1bmN0aW9uIChsb2NhdGlvblZhbCkgewogICAgICBpZiAobG9jYXRpb25WYWwuaXNTZXRCeU1hcCkgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIC8vIHZhciBpdGVtID0gdGhpcy5maWx0ZXJlZE1hcmtlcnNbbG9jYXRpb25WYWwubG9jVmFsdWVdCiAgICAgIGlmIChsb2NhdGlvblZhbC5jdXJyZW50QnVzaW5lc3MgIT09IG51bGwgJiYgdGhpcy4kcmVmcy5jb3ZpZE1hcC5tYXBPYmplY3QuZ2V0Wm9vbSgpIDwgMTcpIHsKICAgICAgICB0aGlzLiRyZWZzLmNvdmlkTWFwLm1hcE9iamVjdC5zZXRWaWV3KAogICAgICAgICAgbGF0TG5nKGxvY2F0aW9uVmFsLmN1cnJlbnRCdXNpbmVzcy5tYXJrZXIuZ3N4JGxhdC4kdCwgbG9jYXRpb25WYWwuY3VycmVudEJ1c2luZXNzLm1hcmtlci5nc3gkbG9uLiR0KSwKICAgICAgICAgIDE3LAogICAgICAgICAgeyBkdXJhdGlvbjogMSB9CiAgICAgICAgKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ResourceMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResourceMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-container class=\"bv-example-row px-0\" fluid>\n    <div class=\"map\">\n      <l-map\n        ref=\"covidMap\"\n        v-if=\"showMap\"\n        :zoom=\"zoom\"\n        :center=\"center\"\n        :options=\"mapOptions\"\n        style=\"height: 100%; width: 100%;\"\n        @update:center=\"centerUpdated\"\n        @update:zoom=\"(val) => (zoom = val)\"\n        @update:bounds=\"boundsUpdated\"\n      >\n        <l-control position=\"topright\">\n          <div class=\"mapkey\" :class=\"{ 'show-key': showKey }\">\n            <div class=\"title-block\">\n              <h6 class=\"title\">{{ $t('label.mapkey') }}</h6>\n              <i @click=\"showKey = !showKey\" class=\"fas fa-info-circle\" />\n            </div>\n            <div class=\"keys\" :class=\"{ 'show-key': showKey }\">\n              <icon-list-item :image=\"require('../images/Blue.png')\" :title=\"$t('label.open')\" link=\"\" />\n              <icon-list-item :image=\"require('../images/Grey.png')\" :title=\"$t('label.closedonday')\" link=\"\" />\n              <icon-list-item :image=\"require('../images/Red.png')\" :title=\"$t('label.selected')\" link=\"\" />\n            </div>\n          </div>\n        </l-control>\n        <l-tile-layer :url=\"mapUrl\" :attribution=\"attribution\" />\n\n        <v-marker-cluster ref=\"marks\" :options=\"clusterOptions\">\n          <!-- @clusterclick=\"click()\" @ready=\"ready\" -->\n          <l-marker\n            :lat-lng=\"latLng(item.marker.gsx$lat.$t, item.marker.gsx$lon.$t)\"\n            :icon=\"selectedIcon(location.currentBusiness !== null && item.marker.id.$t === location.currentBusiness.marker.id.$t, item)\"\n            v-for=\"(item, index) in filteredMarkers\"\n            v-bind:key=\"index\"\n            @click=\"$emit('location-selected', { locValue: index, locId: item.marker.id.$t, isSetByMap: true })\"\n          ></l-marker>\n        </v-marker-cluster>\n      </l-map>\n    </div>\n  </b-container>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker, LControl } from 'vue2-leaflet'\nimport { latLng, Icon, ExtraMarkers } from 'leaflet'\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster'\nimport IconListItem from './IconListItem.vue'\nimport { businessIcon } from '../utilities'\n\ndelete Icon.Default.prototype._getIconUrl\nIcon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n})\n\nexport default {\n  name: 'ResourceMap',\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LControl,\n    'v-marker-cluster': Vue2LeafletMarkerCluster,\n    IconListItem\n  },\n  props: {\n    filteredMarkers: Array,\n    location: { locValue: Number, currentBusiness: Object, isSetByMap: Boolean },\n    mapUrl: String,\n    attribution: String,\n    centroid: { lat: Number, lng: Number }\n  },\n  data() {\n    return {\n      center: latLng(this.centroid.lat, this.centroid.lng),\n      zoom: 10,\n      showParagraph: true,\n      mapOptions: { zoomSnap: 0.5, setView: true },\n      showMap: true,\n      locationData: location,\n      clusterOptions: { spiderfyOnMaxZoom: true, maxClusterRadius: 40, disableClusteringAtZoom: 16 },\n      showKey: false\n    }\n  },\n  mounted() {\n    this.editZoomControl()\n    this.$nextTick(() => {\n      this.$emit('bounds', this.$refs.covidMap.mapObject.getBounds())\n    })\n  },\n  methods: {\n    centerUpdated(center) {\n      this.center = center\n      this.$emit('center', center)\n    },\n    boundsUpdated(bounds) {\n      this.$emit('bounds', bounds)\n    },\n    editZoomControl() {\n      const zoomControl = this.$el.querySelector('.leaflet-top.leaflet-left')\n      zoomControl.className = 'leaflet-bottom leaflet-right'\n    },\n    latLng,\n    selectedIcon(selected, item) {\n      const isOpen = item.oc\n      let markerColor = isOpen ? '#566ca9' : '#999'\n      const iconClasses = businessIcon(item.marker)\n      if (selected) {\n        markerColor = '#ff3d3d'\n      }\n      var markerIcon = ExtraMarkers.icon({\n        markerColor,\n        icon: iconClasses,\n        prefix: 'fa',\n        svg: true\n        // ,\n        // name: item.marker.gsx$providername.$t,\n        // nameClasses: 'markerName'\n      })\n      return markerIcon\n    }\n    // eslint-disable-next-line no-console\n    // click: (e) => console.log('clusterclick', e),\n    // eslint-disable-next-line no-console\n    // ready: (e) => console.log('ready', e)\n  },\n  watch: {\n    // https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\n    location: function (locationVal) {\n      if (locationVal.isSetByMap) {\n        return\n      }\n      // var item = this.filteredMarkers[locationVal.locValue]\n      if (locationVal.currentBusiness !== null && this.$refs.covidMap.mapObject.getZoom() < 17) {\n        this.$refs.covidMap.mapObject.setView(\n          latLng(locationVal.currentBusiness.marker.gsx$lat.$t, locationVal.currentBusiness.marker.gsx$lon.$t),\n          17,\n          { duration: 1 }\n        )\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.map {\n  width: auto;\n  height: 100%;\n  top: 0;\n  padding: 0;\n  /* margin-left: 8px;\n    margin-right: 8px; */\n}\n\n.bv-example-row {\n  height: calc(100% - 124px);\n}\n\n@media (min-width: 768px) {\n  .bv-example-row {\n    height: calc(100% - 116px);\n  }\n}\n\n.noselection.bv-example-row {\n  height: 100%;\n}\n\n.mapkey {\n  padding: 16px;\n\n  &.show-key {\n    background-color: #f8f9fa !important;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\n  }\n\n  i {\n    font-size: 2rem;\n    opacity: 0.4;\n    color: #000;\n    cursor: pointer;\n    vertical-align: middle;\n  }\n\n  &.show-key i {\n    opacity: 1;\n  }\n}\n\n.title-block {\n  width: 100%;\n  text-align: right;\n}\n\n.mapkey .title {\n  vertical-align: middle;\n  margin: 0 8px;\n  display: none;\n}\n\n.keys {\n  display: none;\n}\n\n.show-key {\n  display: block;\n}\n.mapkey.show-key .title {\n  display: inline;\n}\n</style>\n"]}]}