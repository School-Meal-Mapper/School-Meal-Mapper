{"remainingRequest":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/babel-loader/lib/index.js!/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/src/App.vue","mtime":1592246033230},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elizaparadise/Desktop/COVID_Support/NC-COVID-Support/covid-19-support/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home\">\n    <app-header :language=\"language.name\" @language-selected=\"changeLanguage\" :socialMedia=\"socialMediaico\">\n      <theme-header></theme-header>\n    </app-header>\n    <about-us-modal />\n    <div class=\"d-flex\" id=\"wrapper\" :class=\"{ toggled: isFilterOpen }\" v-if=\"!!entries\">\n      <search-filter\n        :isFilterOpen=\"isFilterOpen\"\n        :need=\"need\"\n        :day=\"day\"\n        :filteredMarkers=\"filteredMarkers\"\n        :highlightFilteredMarkers=\"highlightFilteredMarkers\"\n        :location=\"locationData\"\n        :show-list=\"showList\"\n        @location-selected=\"passLocation\"\n        @toggle=\"isFilterOpen = !isFilterOpen\"\n        @need-selected=\"needSelected\"\n        @day-selected=\"daySelected\"\n      />\n\n      <div id=\"page-content-wrapper\">\n        <highlights\n          :need=\"need\"\n          :class=\"{ toggled: isFilterOpen }\"\n          :filteredMarkers=\"highlightFilteredMarkers\"\n          :highlightFilters=\"highlightFilters\"\n          @box-selected=\"boxSelected\"\n        />\n\n        <resource-map\n          :filteredMarkers=\"filteredMarkers\"\n          :class=\"{ noselection: need == 'none' }\"\n          :location=\"locationData\"\n          :attribution=\"attribution\"\n          @location-selected=\"passLocation\"\n          @bounds=\"boundsUpdated\"\n          @center=\"centerUpdated\"\n          :mapUrl=\"mapUrl\"\n          :centroid=\"centroid\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from './components/Header.vue'\nimport SearchFilter from './components/SearchFilter.vue'\nimport Highlights from './components/Highlights.vue'\nimport ResourceMap from './components/ResourceMap.vue'\nimport AboutUsModal from './components/AboutUs.vue'\nimport { latLng } from 'leaflet'\nimport { haversineDistance, sortByDistance } from './utilities'\n\nimport { weekdays, dayFilters, booleanFilters, dayAny } from './constants'\n\nimport { theme } from 'theme.config'\nimport ThemeHeader from 'theme.header'\n\nfunction extend(obj, src) {\n  for (var key in src) {\n    obj.push(src[key])\n  }\n  return obj\n}\n\nfunction addOrRemove(array, item) {\n  const exists = array.includes(item)\n\n  if (exists) {\n    return array.filter((c) => {\n      return c !== item\n    })\n  } else {\n    const result = array\n    result.push(item)\n    return result\n  }\n}\n\nexport default {\n  name: 'app',\n  props: {\n    msg: String\n  },\n  watch: {\n    currentPage: 'fetchData'\n  },\n  created() {\n    this.fetchData()\n  },\n  components: {\n    AboutUsModal,\n    AppHeader,\n    Highlights,\n    ResourceMap,\n    SearchFilter,\n    ThemeHeader\n  },\n  data() {\n    const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n    return {\n      entries: null,\n      need: 'none',\n      day: dayAny,\n      isFilterOpen: true,\n      language: { name: 'English', iso: 'en' },\n      locationData: { locValue: null, locId: null, currentBusiness: null, isSetByMap: false },\n      showList: false,\n      highlightFilters: [],\n      bounds: null,\n      centroid: {\n        lat: theme.settings.initialMapCenter.lat,\n        lng: theme.settings.initialMapCenter.lng,\n        zoom: theme.settings.initialMapZoom\n      },\n      darkModeMediaQuery: darkModeMediaQuery,\n      darkMode: darkModeMediaQuery.matches,\n      mapUrl: '',\n      attribution: null,\n      socialMediaico: theme.socialMedia\n    }\n  },\n  mounted() {\n    this.setDarkMode(this.darkMode)\n    this.darkModeMediaQuery.addListener((e) => {\n      this.darkMode = e.matches\n      this.setDarkMode(this.darkMode)\n    })\n  },\n  methods: {\n    setDarkMode(darkMode) {\n      this.mapUrl = darkMode ? theme.maps.dark.url : theme.maps.normal.url\n      this.attribution = darkMode ? theme.maps.dark.attribution : theme.maps.normal.attribution\n    },\n    centerUpdated(center) {\n      this.centroid = { lat: center.lat, lng: center.lng }\n    },\n    boundsUpdated: function (bounds) {\n      this.bounds = bounds\n    },\n    getDay: function (day) {\n      if (day == 0) {\n        return 6\n      } else {\n        return day - 1\n      }\n    },\n    boxSelected: function (content) {\n      this.highlightFilters = addOrRemove(this.highlightFilters, content.need)\n    },\n    isAnyDaySelected(day) {\n      return day >= dayAny\n    },\n    needSelected: function (val) {\n      this.need = val\n      this.highlightFilters = []\n      window.gtag('event', 'What do you need?', { event_category: 'Search - (' + this.language.name + ')', event_label: val })\n    },\n    daySelected: function (val) {\n      this.day = val\n      this.highlightFilters = []\n      window.gtag('event', 'When do you need it?', {\n        event_category: 'Search - (' + this.language.name + ')',\n        event_label: weekdays[this.getDay(val)].day\n      })\n    },\n    changeLanguage: function (item) {\n      this.language = item\n      this.$root.updateLang(item.iso)\n    },\n    async fetchData() {\n      const res = await fetch(theme.data.spreadsheetUrl)\n      const entries = await res.json()\n\n      // if (entries !== null) {\n      //   entries.forEach(c => {\n      //     c\n      //   });\n      // }\n\n      this.entries = entries.feed.entry\n    },\n    passLocation: function (val) {\n      val.currentBusiness = this.filteredMarkers[val.locValue]\n      this.locationData = val\n      this.showList = false\n      this.isFilterOpen = true\n      var proName = this.filteredMarkers[val.locValue].marker.gsx$provideraddloc.$t\n        ? ', ' + this.filteredMarkers[val.locValue].marker.gsx$provideraddloc.$t\n        : ''\n\n      window.gtag('event', val.isSetByMap ? 'Marker clicked' : 'List item clicked', {\n        event_category: 'View details - (' + this.language.name + ')',\n        event_label: this.filteredMarkers[val.locValue].marker.gsx$providername.$t + proName\n      })\n    }\n  },\n  computed: {\n    filteredMarkers() {\n      if (this.entries == null) return null\n\n      var markers\n\n      if (this.need == 'family') {\n        markers = this.entries.filter((c) => c.gsx$familymeal.$t == 1 && c.gsx$status.$t == '1')\n      } else {\n        markers = this.entries.filter((c) => c.gsx$resource.$t === this.need && c.gsx$status.$t == '1')\n      }\n\n      // Filter out the boolean items\n      this.highlightFilters.forEach((element) => {\n        if (booleanFilters.includes(element)) {\n          markers = markers.filter((c) => c['gsx$' + element].$t == '1')\n        }\n      })\n\n      var today = new Date().getDay()\n      var selectedDay = today\n      if (!this.isAnyDaySelected(this.day)) {\n        selectedDay = this.day\n      }\n\n      const dayFilter = dayFilters[this.getDay(selectedDay)]\n      var open = markers.filter((c) => c[dayFilter].$t !== '0')\n      var closed = markers.filter((c) => c[dayFilter].$t == '0')\n\n      var retList = extend(\n        open.map((marker) => ({\n          marker,\n          oc: true,\n          distance: haversineDistance([this.centroid.lat, this.centroid.lng], [marker.gsx$lat.$t, marker.gsx$lon.$t], true)\n        })),\n        closed.map((marker) => ({\n          marker,\n          oc: false,\n          distance: haversineDistance([this.centroid.lat, this.centroid.lng], [marker.gsx$lat.$t, marker.gsx$lon.$t], true)\n        }))\n      ).sort(sortByDistance)\n\n      return retList\n    },\n    highlightFilteredMarkers() {\n      var contained = [] //makers in map boundingbox\n      this.filteredMarkers.forEach((m) => {\n        if (this.bounds.contains(latLng(m.marker.gsx$lat.$t, m.marker.gsx$lon.$t))) contained.push(m)\n      })\n\n      if (!this.isAnyDaySelected(this.day)) {\n        return contained\n      }\n\n      return contained.map((m) => {\n        let obj = Object.assign({}, m)\n        obj.oc = true\n        return obj\n      })\n    }\n  }\n}\n</script>\n\n<style></style>\n"],"sourceRoot":"src"}]}